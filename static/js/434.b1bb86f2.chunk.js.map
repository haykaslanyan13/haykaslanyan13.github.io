{"version":3,"file":"static/js/434.b1bb86f2.chunk.js","mappings":"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","sources":["components/pagination/pagination.styles.ts","components/pagination/pagination.component.tsx","components/top-movie-card/movie-card.styles.ts","components/top-movie-card/movie-card.component.tsx","hook/ui/pagination.hook.ts","hook/api/now-playing.hook.ts","pages/cinema/cinema.styles.ts","pages/cinema/cinema.component.tsx","components/movie/movie.styles.ts","components/movie/movie.component.tsx","pages/movies/movies.styles.ts","pages/movies/movies.component.tsx","pages/movies-view/movies-view.styles.ts","pages/movies-view/movies-view.component.tsx","hook/api/top-rated-movies.hook.ts","pages/top-movies/top-movies.styles.ts","pages/top-movies/top-movies.component.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport default styled.div<any>`\n  .ant-pagination-item-link,\n  .ant-pagination-item {\n    background-color: ${({ mode }) =>\n      mode == 'light' ? '#fff' : 'rgb(15, 15, 16)'};\n    transition: background-color 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n    color: ${({ mode }) =>\n      mode == 'light' ? '#fe7900 !important' : '#fff !important'};\n    border: none;\n    &:hover {\n      color: #fe7900 !important;\n    }\n    > a {\n      color: ${({ mode }) =>\n        mode == 'light' ? '#fe7900 !important' : '#fff !important'};\n      transition: color 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n      border: none;\n      &:hover {\n        color: #fe7900 !important;\n        ${({ mode }) => mode == 'light' && 'background-color: #e9ecef'};\n      }\n    }\n  }\n  .anticon-double-right,\n  .anticon-double-left {\n    color: #fe7900 !important;\n  }\n  .ant-pagination-item-ellipsis {\n    color: ${({ mode }) =>\n      mode == 'light' ? '#fe7900 !important' : '#fff !important'};\n    transition: color 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n  }\n  .ant-pagination-item-active {\n    background-color: #fe7900 !important;\n    > a {\n      color: #fff !important;\n      &:hover {\n        color: #fff !important;\n        background-color: #fe7900 !important;\n      }\n    }\n    &:hover {\n      background-color: #fe7900 !important;\n    }\n  }\n`\n","import { Pagination, PaginationProps } from 'antd'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from '../../store/store'\nimport Styles from './pagination.styles'\n\ninterface DataPaginationProps extends PaginationProps {\n  page: number\n  onPage: (page: number) => void\n  total: number\n  perPage?: number\n}\n\nconst DataPagination = ({\n  onPage,\n  page,\n  total,\n  perPage\n}: DataPaginationProps) => {\n  const { mode } = useSelector((state: RootState) => state.settings)\n\n  return (\n    <Styles mode={mode}>\n      <Pagination\n        current={page}\n        showSizeChanger={false}\n        onChange={onPage}\n        showLessItems\n        total={total}\n        pageSize={perPage || 10}\n      />\n    </Styles>\n  )\n}\n\nexport default DataPagination\n","import styled from 'styled-components'\n\nexport default styled.div<any>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  .ant-card-body {\n    padding: 0px !important;\n  }\n  .fw-800 {\n    font-weight: 800;\n  }\n  .grey {\n    color: rgba(0, 0, 0, 0.5);\n    color: ${({ mode }) => (mode == 'night' ? '#fff' : 'rgba(0, 0, 0, 0.5)')};\n    transition: color 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n  }\n  .TopMovie {\n    &-card {\n      position: relative;\n      display: flex !important;\n      width: 100%;\n      transition: all 0.2s;\n      border: none;\n      margin-top: 25px;\n      user-select: none;\n      cursor: pointer;\n      &:hover {\n        transform: scale(1.04);\n        box-shadow: 0 14px 28px rgb(0 0 0 / 25%), 0 10px 10px rgb(0 0 0 / 22%);\n        border: none;\n      }\n      &__image {\n        width: 84px;\n        @media (max-width: 1000px) {\n          width: 75px;\n        }\n        @media (max-width: 720px) {\n          width: 120px;\n        }\n        @media (max-width: 530px) {\n          width: 23vw;\n        }\n        &-loading {\n          width: 84px;\n          height: 126px;\n          @media (max-width: 1000px) {\n            width: 75px;\n          }\n          @media (max-width: 720px) {\n            width: 120px;\n          }\n          @media (max-width: 530px) {\n            width: 23vw;\n          }\n        }\n      }\n      &__content {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 5px;\n        font-size: 17px;\n        color: ${({ mode }) => (mode == 'night' ? '#fff' : 'black')};\n        background-color: ${({ mode }) =>\n          mode == 'night' ? '#242526' : '#f8f8f8'};\n        transition: all 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n      }\n      &-rating {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 40px;\n        height: 40px;\n        background-color: #fe7900;\n        border-radius: 20px;\n        border: 1px solid #fff;\n        bottom: 5px;\n        right: 5px;\n        @media (max-width: 1000px) {\n          width: 34px;\n          height: 34px;\n          border-radius: 17px;\n        }\n        &__vote {\n          color: #fff;\n        }\n      }\n    }\n  }\n`\n","import moment from 'moment'\nimport { useTranslation } from 'react-i18next'\n\nimport Image from '../image/image.component'\nimport Styles from './movie-card.styles'\n\ninterface MovieCard {\n  movie: any\n  mode?: 'light' | 'night'\n  onClick?: (event: any) => void\n}\n\nconst MovieCard = ({ movie, mode = 'light', ...props }: MovieCard) => {\n  const { t } = useTranslation()\n  return (\n    <Styles {...props} mode={mode}>\n      <div className=\"TopMovie-card\">\n        <Image\n          lazyLoad\n          loaderWidth={'40px'}\n          loaderStrokeWidth={'4'}\n          src={movie.poster_path}\n          imageClassName={'TopMovie-card__image'}\n          loaderClassName={'TopMovie-card__image-loading'}\n        />\n        <div className=\"TopMovie-card__content\">\n          <strong className=\"fw-800\">{movie.title}</strong>\n          <small className=\"grey\">\n            {t('year')}:{' '}\n            <strong className=\"fw-800 grey\">\n              {moment(movie.release_date).format('YYYY')}\n            </strong>\n          </small>\n          <small className=\"grey\">\n            {t('total-votes')}:{' '}\n            <strong className=\"fw-800 grey\">{movie.vote_count}</strong>\n          </small>\n        </div>\n        <div className=\"TopMovie-card-rating\">\n          <span className=\"TopMovie-card-rating__vote fw-800\">\n            {movie.vote_average}\n          </span>\n        </div>\n      </div>\n    </Styles>\n  )\n}\n\nexport default MovieCard\n","import { useEffect, useState } from 'react'\n\ninterface UsePagination {\n  page: number\n  onPage: (page: number) => void\n}\n\nexport const usePagination = (deps: any[] = []): UsePagination => {\n  const [page, setPage] = useState(1)\n\n  useEffect(() => {\n    setPage(1)\n  }, deps)\n\n  const onPage = (page: number) => {\n    setPage(page)\n  }\n\n  return {\n    page,\n    onPage\n  }\n}\n","import useSWR from 'swr'\n\nimport { getData } from '../../services/api/movies'\nimport { stringifyURL } from '../../utils/query'\n\ninterface UseNowPlaying {\n  nowPlayingMovies: Record<string, any>\n  isLoading: boolean\n}\n\ninterface IProps {\n  language: string\n  page?: number\n}\n\nexport const useNowPlaying = ({\n  language,\n  page = 1\n}: IProps): UseNowPlaying => {\n  const params = {\n    language,\n    page\n  }\n\n  const { data, error } = useSWR(\n    stringifyURL('/movie/now_playing', params),\n    getData\n  )\n\n  const nowPlayingMovies = data || {}\n  const isLoading = !nowPlayingMovies && !error\n\n  return {\n    nowPlayingMovies,\n    isLoading\n  }\n}\n","import styled from 'styled-components'\n\nexport default styled.div<any>`\n  margin-top: 45px;\n  margin-bottom: 25px;\n  width: 350px;\n  @media (max-width: 1200px) {\n    width: 310px;\n  }\n  @media (max-width: 1000px) {\n    width: 250px;\n  }\n  @media (max-width: 720px) {\n    width: 500px;\n  }\n  @media (max-width: 530px) {\n    width: 90vw;\n  }\n  .Cinema {\n    &__title {\n      font-size: 24px;\n      color: ${({ mode }) => (mode == 'light' ? '#fe7900' : '#fff')};\n      font-weight: 800;\n      transition: color 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n    }\n  }\n`\n","import { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport MovieCard from '../../components/top-movie-card/movie-card.component'\nimport { Routes } from '../../enums/routes.enum'\nimport { useNowPlaying } from '../../hook/api/now-playing.hook'\nimport { RootState } from '../../store/store'\nimport { getRoute } from '../../utils/route'\nimport { scrollToTop } from '../../utils/scroll'\nimport Styles from './cinema.styles'\n\nconst Cinema = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { mode, language } = useSelector((state: RootState) => state.settings)\n  const {\n    nowPlayingMovies: { results: movies }\n  } = useNowPlaying({\n    language: language.key\n  })\n\n  const navigateToView = (movie: Record<string, any>) => {\n    navigate(\n      getRoute(Routes.MOVIE, {\n        id: movie.id\n      }),\n      {\n        state: {\n          id: movie.id\n        }\n      }\n    )\n    scrollToTop('auto')\n  }\n\n  return (\n    <Styles mode={mode}>\n      <strong className=\"Cinema__title\">{t('to-the-cinema')}</strong>\n      {movies?.slice(0, 10)?.map((movie: any, key: number) => {\n        return (\n          <MovieCard\n            onClick={() => {\n              navigateToView(movie)\n            }}\n            movie={movie}\n            mode={mode}\n            key={key}\n          />\n        )\n      })}\n    </Styles>\n  )\n}\n\nexport default Cinema\n","import styled from 'styled-components'\n\nexport default styled.div<any>`\n  .ant-rate-star,\n  .ant-rate-star-zero {\n    margin: 0px !important;\n  }\n  .Movie {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 225px;\n    @media (max-width: 1200px) {\n      width: 180px !important;\n    }\n    @media (max-width: 1000px) {\n      width: 25vw !important;\n    }\n    @media (max-width: 720px) {\n      width: 40vw !important;\n    }\n    &__image {\n      width: 100%;\n      transition: transform 0.3s;\n      opacity: 1;\n      &-loading {\n        width: 225px;\n        height: 337.5px;\n        @media (max-width: 1200px) {\n          width: 180px !important;\n          height: 270px !important;\n        }\n        @media (max-width: 1000px) {\n          width: 25vw !important;\n          height: 37vw !important;\n        }\n        @media (max-width: 720px) {\n          width: 40vw !important;\n          height: 68vw !important;\n        }\n        &-spinner {\n          filter: invert(50%) sepia(66%) saturate(2823%) hue-rotate(2deg)\n            brightness(103%) contrast(104%);\n        }\n      }\n      &-container {\n        overflow: hidden;\n        position: relative;\n        &:hover .Movie__image {\n          background-color: rgba(100, 100, 100, 0.5);\n          transform: scale(1.4);\n        }\n        &:hover .Movie__image-loading {\n          background-color: rgba(100, 100, 100, 0.5);\n          transform: scale(1.4);\n        }\n        &:hover .Movie__image-description {\n          opacity: 1;\n          background-color: rgba(0, 0, 0, 0.6);\n        }\n      }\n      &-description {\n        position: absolute;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        display: flex;\n        flex-direction: column;\n        padding: 10px;\n        user-select: none;\n        cursor: pointer;\n        &-item {\n          color: white;\n          font-weight: 800;\n        }\n        &-title {\n          color: white;\n          font-weight: 800;\n          padding-bottom: 5px;\n          font-size: 20px;\n        }\n        &-rating {\n          background-color: #fe7900;\n          text-align: center;\n          width: 38px;\n          height: 38px;\n          border-radius: 18px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border: 1px solid white;\n          &-container {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-top: 10px;\n          }\n          &-value {\n            color: white;\n            font-weight: 800;\n            font-size: 17px;\n          }\n        }\n      }\n    }\n    &__title {\n      color: ${({ mode }) => (mode == 'light' ? 'black' : 'white')};\n      transition: color 0.4s;\n      font-size: 18px;\n      text-align: center;\n      width: 100%;\n      font-weight: 800;\n    }\n    &__rating {\n      font-size: 21px;\n      @media (max-width: 1200px) {\n        font-size: 18px;\n      }\n      @media (max-width: 1000px) {\n        font-size: 21px;\n      }\n      @media (max-width: 850px) {\n        font-size: 18px;\n      }\n      @media (max-width: 720px) {\n        font-size: 25px;\n      }\n      @media (max-width: 630px) {\n        font-size: 22px;\n      }\n      @media (max-width: 550px) {\n        font-size: 20px;\n      }\n      @media (max-width: 500px) {\n        font-size: 18px;\n      }\n      @media (max-width: 450px) {\n        font-size: 16px;\n      }\n      @media (max-width: 400px) {\n        font-size: 14px;\n      }\n      @media (max-width: 400px) {\n        font-size: 12px;\n      }\n      color: #fe7900;\n    }\n  }\n`\n","import { Rate } from 'antd'\nimport moment from 'moment'\nimport { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Routes } from '../../enums/routes.enum'\nimport { useIsMobile } from '../../hook/ui/is-mobile.hook'\nimport { RootState } from '../../store/store'\nimport { getRoute } from '../../utils/route'\nimport { scrollToTop } from '../../utils/scroll'\nimport Image from '../image/image.component'\nimport Styles from './movie.styles'\n\ninterface MovieProps {\n  src: string\n  rating: number\n  title: string\n  id: string | number\n  movie: Record<string | number, any>\n}\n\nconst Movie = ({ src, rating, title, movie }: MovieProps) => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const isMobile = useIsMobile()\n  const { mode } = useSelector((state: RootState) => state.settings)\n\n  const navigateToView = () => {\n    navigate(\n      getRoute(Routes.MOVIE, {\n        id: movie.id\n      }),\n      {\n        state: {\n          id: movie.id\n        }\n      }\n    )\n    scrollToTop('auto')\n  }\n\n  return (\n    <Styles onClick={navigateToView} isMobile={isMobile} mode={mode}>\n      <div className=\"Movie\">\n        <div className=\"Movie__image-container\">\n          <Image\n            lazyLoad\n            src={src}\n            loaderStrokeWidth={'5'}\n            loaderWidth={'60px'}\n            imageClassName={'Movie__image'}\n            loaderClassName={'Movie__image-loading'}\n          />\n          <div className=\"Movie__image-description\">\n            <span className=\"Movie__image-description-title\">{title}</span>\n            <span className=\"Movie__image-description-item\">\n              {t('year')}: {moment(movie.release_date).format('YYYY')}\n            </span>\n            <span className=\"Movie__image-description-item\">\n              {t('total-votes')}: {movie.vote_count}\n            </span>\n            <span className=\"Movie__image-description-item\">\n              {t('popularity')}: {Math.floor(movie.popularity)}\n            </span>\n            <div className=\"Movie__image-description-rating-container\">\n              <span className=\"Movie__image-description-rating Movie__image-description-rating-value\">\n                {movie.vote_average}\n              </span>\n            </div>\n          </div>\n        </div>\n        <Rate\n          value={rating}\n          className=\"Movie__rating\"\n          allowHalf\n          count={10}\n          disabled\n        />\n        <span className=\"Movie__title\">{title}</span>\n      </div>\n    </Styles>\n  )\n}\n\nexport default Movie\n","import styled, { keyframes } from 'styled-components'\n\nconst mount = keyframes`\n    from {opacity: 0;}\n    to {opacity: 1;}\n`\n\nexport default styled.div<any>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 90px;\n  margin-bottom: 35px;\n  animation: ${mount} 1s;\n  animation-iteration-count: 1;\n  @media (max-width: 720px) {\n    margin-top: 70px;\n  }\n  .MoviesView {\n    &__movie-container {\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n      @media (max-width: 1000px) {\n        grid-template-columns: 1fr 1fr;\n      }\n      grid-row-gap: 20px;\n      grid-column-gap: 20px;\n      padding-top: 25px;\n      padding-bottom: 25px;\n    }\n  }\n`\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Movie from '../../components/movie/movie.component'\nimport DataPagination from '../../components/pagination/pagination.component'\nimport { usePopulars } from '../../hook/api/populars.hook'\nimport { useIsMobile } from '../../hook/ui/is-mobile.hook'\nimport { usePagination } from '../../hook/ui/pagination.hook'\nimport { changeLoadProcess } from '../../store/reducers/settingsSlice'\nimport { RootState } from '../../store/store'\nimport { scrollToTop } from '../../utils/scroll'\nimport Styles from './movies.styles'\n\nconst Movies = () => {\n  const dispatch = useDispatch()\n  const { page, onPage } = usePagination()\n  const isMobile = useIsMobile()\n  const { language } = useSelector((state: RootState) => state.settings)\n  const { populars, isLoading } = usePopulars({\n    language: language.key,\n    page\n  })\n  const [data, setData] = useState<any>(populars)\n\n  useEffect(() => {\n    Object.keys(populars).length && setData(populars)\n  }, [populars])\n\n  useEffect(() => {\n    dispatch(changeLoadProcess(isLoading))\n  }, [isLoading])\n\n  const scrollIntoView = () => {\n    setTimeout(() => {\n      scrollToTop('auto')\n    }, 500)\n  }\n\n  return (\n    <Styles isMobile={isMobile}>\n      <DataPagination total={1000} perPage={20} onPage={onPage} page={page} />\n      <div className=\"MoviesView__movie-container\">\n        {data?.results?.map((movie: any, key: number) => {\n          return (\n            <Movie\n              id={movie.id}\n              rating={movie.vote_average}\n              src={movie.poster_path}\n              key={key}\n              title={movie.title}\n              movie={movie}\n            />\n          )\n        })}\n      </div>\n      <DataPagination\n        total={1000}\n        perPage={20}\n        onPage={(page: number) => {\n          scrollIntoView()\n          onPage(page)\n        }}\n        page={page}\n      />\n    </Styles>\n  )\n}\n\nexport default Movies\n","import styled from 'styled-components'\n\nexport default styled.div<any>`\n  display: flex;\n  ${({ isMobile }) =>\n    isMobile && 'flex-direction: column;  align-items: center;'}\n  width: 100%;\n  justify-content: center;\n  gap: 2rem;\n  .TopMovies {\n    &__container {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`\n","import React from 'react'\n\nimport { useIsMobile } from '../../hook/ui/is-mobile.hook'\nimport Cinema from '../cinema/cinema.component'\nimport Movies from '../movies/movies.component'\nimport TopMovies from '../top-movies/top-movies.component'\nimport Styles from './movies-view.styles'\n\nconst MoviesView = () => {\n  const isMobile = useIsMobile()\n  return (\n    <Styles isMobile={isMobile}>\n      <Movies />\n      <div className=\"TopMovies__container\">\n        <TopMovies />\n        <Cinema />\n      </div>\n    </Styles>\n  )\n}\n\nexport default MoviesView\n","import useSWR from 'swr'\n\nimport { getData } from '../../services/api/movies'\nimport { stringifyURL } from '../../utils/query'\n\ninterface UseTopMovies {\n  topMovies: Record<string, any>\n  isLoading: boolean\n}\n\ninterface IProps {\n  language: string\n  page: number | string\n}\n\nexport const useTopMovies = ({ language, page }: IProps): UseTopMovies => {\n  const params = {\n    language,\n    page\n  }\n\n  const { data, error } = useSWR(\n    stringifyURL('/movie/top_rated', params),\n    getData\n  )\n\n  const topMovies = data || {}\n  const isLoading = !data && !error\n\n  return {\n    topMovies,\n    isLoading\n  }\n}\n","import styled from 'styled-components'\n\nexport default styled.div<any>`\n  width: 350px;\n  @media (max-width: 1200px) {\n    width: 310px;\n  }\n  @media (max-width: 1000px) {\n    width: 250px;\n  }\n  @media (max-width: 720px) {\n    width: 500px;\n  }\n  @media (max-width: 530px) {\n    width: 90vw;\n  }\n  .TopMovies {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    ${({ isMobile }) => !isMobile && 'margin-top: 45px'};\n    &-title {\n      font-size: 24px;\n      color: ${({ mode }) => (mode == 'light' ? '#fe7900' : '#fff')};\n      transition: all 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n      font-weight: bold;\n    }\n    &-refresh-icon {\n      width: 22px;\n      height: 22px;\n      transition: all 0.4s cubic-bezier(0.41, -0.21, 0.41, 1.1);\n      filter: ${({ mode }) =>\n        mode == 'light'\n          ? 'invert(46%) sepia(92%) saturate(1479%) hue-rotate(0deg)\\n        brightness(100%) contrast(107%)'\n          : 'invert(100%) sepia(0%) saturate(0%) hue-rotate(41deg) brightness(108%) contrast(101%)'};\n      cursor: pointer;\n    }\n  }\n`\n","import { useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport { RefreshIcon } from '../../assets/media/icons'\nimport MovieCard from '../../components/top-movie-card/movie-card.component'\nimport { Routes } from '../../enums/routes.enum'\nimport { useTopMovies } from '../../hook/api/top-rated-movies.hook'\nimport { useIsMobile } from '../../hook/ui/is-mobile.hook'\nimport {\n  changeLoadProcess,\n  changeRandomPage\n} from '../../store/reducers/settingsSlice'\nimport { RootState } from '../../store/store'\nimport { getRoute } from '../../utils/route'\nimport { scrollToTop } from '../../utils/scroll'\nimport Styles from './top-movies.styles'\n\nconst TopMovies = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const isMobile = useIsMobile()\n  const { language, mode } = useSelector((state: RootState) => state.settings)\n  const { randomPage } = useSelector((state: RootState) => state.settings)\n  const { topMovies, isLoading } = useTopMovies({\n    language: language.key,\n    page: randomPage\n  })\n  const [movies, setMovies] = useState(topMovies?.results)\n\n  useEffect(() => {\n    Object.keys(topMovies)?.length && setMovies(topMovies.results)\n  }, [topMovies])\n\n  useEffect(() => {\n    dispatch(changeLoadProcess(isLoading))\n  }, [isLoading])\n\n  const navigateToView = (movie: Record<string, any>) => {\n    navigate(\n      getRoute(Routes.MOVIE, {\n        id: movie.id\n      }),\n      {\n        state: {\n          id: movie.id\n        }\n      }\n    )\n    scrollToTop('auto')\n  }\n\n  return (\n    <Styles isMobile={isMobile} mode={mode}>\n      <div className=\"TopMovies\">\n        <span className=\"TopMovies-title\">{t('top-movies')}</span>\n        <RefreshIcon\n          onClick={() => {\n            dispatch(changeRandomPage())\n          }}\n          className=\"TopMovies-refresh-icon\"\n        />\n      </div>\n      {movies?.slice(0, 10)?.map((movie: any, key: number) => {\n        return (\n          <MovieCard\n            onClick={() => {\n              navigateToView(movie)\n            }}\n            movie={movie}\n            key={key}\n            mode={mode}\n          />\n        )\n      })}\n    </Styles>\n  )\n}\n\nexport default TopMovies\n"],"names":["styled","mode","onPage","page","total","perPage","useSelector","state","settings","current","showSizeChanger","onChange","showLessItems","pageSize","movie","props","t","useTranslation","className","lazyLoad","loaderWidth","loaderStrokeWidth","src","poster_path","imageClassName","loaderClassName","title","moment","release_date","format","vote_count","vote_average","usePagination","deps","useState","setPage","useEffect","useNowPlaying","language","params","useSWR","stringifyURL","getData","data","error","nowPlayingMovies","isLoading","navigate","useNavigate","movies","key","results","slice","map","onClick","getRoute","Routes","id","scrollToTop","navigateToView","rating","isMobile","useIsMobile","Math","floor","popularity","value","allowHalf","count","disabled","mount","keyframes","dispatch","useDispatch","usePopulars","populars","setData","Object","keys","length","changeLoadProcess","setTimeout","useTopMovies","topMovies","randomPage","setMovies","changeRandomPage"],"sourceRoot":""}